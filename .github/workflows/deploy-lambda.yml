name: Deploy Lambda Container

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Change region if needed

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set dynamic ECR variables
        id: set-vars
        run: |
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
          ECR_REGISTRY="${AWS_ACCOUNT_ID}.dkr.ecr.us-east-1.amazonaws.com"
          ECR_REPOSITORY="my-lambda-image"
          IMAGE_TAG="latest"
          ECR_IMAGE_URI="${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}"

          echo "AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID" >> $GITHUB_ENV
          echo "ECR_REGISTRY=$ECR_REGISTRY" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=$ECR_REPOSITORY" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "ECR_IMAGE_URI=$ECR_IMAGE_URI" >> $GITHUB_ENV

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" || \
          aws ecr create-repository --repository-name "$ECR_REPOSITORY"

      - name: Build, tag, and push Docker image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --tag $ECR_IMAGE_URI \
            --push \
            .

      - name: Set ECR repository policy to allow Lambda access
        run: |
          cat > ecr-lambda-policy.json <<EOF
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "LambdaECRAccess",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com"
                },
                "Action": [
                  "ecr:GetDownloadUrlForLayer",
                  "ecr:BatchGetImage",
                  "ecr:BatchCheckLayerAvailability"
                ]
              }
            ]
          }
          EOF

          aws ecr set-repository-policy \
            --repository-name $ECR_REPOSITORY \
            --policy-text file://ecr-lambda-policy.json

      - name: Create or update Lambda function
        env:
          FUNCTION_NAME: my-docker-lambda
          ROLE_ARN: arn:aws:iam::699593689612:role/lambda_role
        run: |
          if aws lambda get-function --function-name $FUNCTION_NAME; then
            echo "Lambda exists. Updating..."
            aws lambda update-function-code \
              --function-name $FUNCTION_NAME \
              --image-uri $ECR_IMAGE_URI
          else
            echo "Creating new Lambda function..."
            aws lambda create-function \
              --function-name $FUNCTION_NAME \
              --package-type Image \
              --code ImageUri=$ECR_IMAGE_URI \
              --role $ROLE_ARN \
              --timeout 15 \
              --memory-size 256 \
              --region us-east-1
          fi
